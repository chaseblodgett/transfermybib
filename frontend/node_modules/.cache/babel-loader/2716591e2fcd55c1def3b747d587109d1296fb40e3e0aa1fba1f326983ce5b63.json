{"ast":null,"code":"var _jsxFileName = \"/Users/chaseblodgett/Documents/Projects/transfermybib/frontend/src/components/Replies.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport PostForm from \"./PostForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Replies({\n  postId\n}) {\n  _s();\n  const [replies, setReplies] = useState([]);\n  const [loadingReplies, setLoadingReplies] = useState(false);\n  useEffect(() => {\n    const fetchReplies = async () => {\n      setLoadingReplies(true);\n      try {\n        const response = await fetch(`/replies/${postId}`);\n        const data = await response.json();\n        setReplies(data || []);\n      } catch (error) {\n        console.error(`Error fetching replies for post ${postId}:`, error);\n        setReplies([]);\n      } finally {\n        setLoadingReplies(false);\n      }\n    };\n    fetchReplies();\n  }, [postId]);\n  const handleNewReply = newReply => {\n    setReplies(prevReplies => [...prevReplies, newReply]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.repliesContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles.replyButton,\n      onClick: () => fetchReplies(),\n      children: \"Refresh Replies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), loadingReplies ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading replies...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : replies.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No replies yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : replies.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.replyCard,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.replyMessage,\n        children: reply.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: styles.replyUser,\n        children: [\"- \", reply.user]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, reply._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(PostForm, {\n      raceId: postId // Reuse PostForm for replies\n      ,\n      onNewPost: handleNewReply,\n      placeholder: \"Write a reply...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Replies, \"glaRisoHurbwJKwvEBuzphPpe/w=\");\n_c = Replies;\nconst styles = {\n  repliesContainer: {\n    marginTop: \"10px\",\n    marginLeft: \"20px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"10px\"\n  },\n  replyButton: {\n    marginBottom: \"10px\",\n    background: \"#007bff\",\n    color: \"#fff\",\n    border: \"none\",\n    padding: \"5px 10px\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\"\n  },\n  replyCard: {\n    backgroundColor: \"#e9ecef\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"5px\",\n    padding: \"10px\"\n  },\n  replyMessage: {\n    margin: \"0 0 5px\"\n  },\n  replyUser: {\n    fontSize: \"0.9rem\",\n    color: \"#555\"\n  }\n};\nexport default Replies;\nvar _c;\n$RefreshReg$(_c, \"Replies\");","map":{"version":3,"names":["React","useState","useEffect","PostForm","jsxDEV","_jsxDEV","Replies","postId","_s","replies","setReplies","loadingReplies","setLoadingReplies","fetchReplies","response","fetch","data","json","error","console","handleNewReply","newReply","prevReplies","style","styles","repliesContainer","children","replyButton","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","map","reply","replyCard","replyMessage","message","replyUser","user","_id","raceId","onNewPost","placeholder","_c","marginTop","marginLeft","display","flexDirection","gap","marginBottom","background","color","border","padding","borderRadius","cursor","backgroundColor","margin","fontSize","$RefreshReg$"],"sources":["/Users/chaseblodgett/Documents/Projects/transfermybib/frontend/src/components/Replies.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PostForm from \"./PostForm\";\n\nfunction Replies({ postId }) {\n  const [replies, setReplies] = useState([]);\n  const [loadingReplies, setLoadingReplies] = useState(false);\n\n  useEffect(() => {\n    const fetchReplies = async () => {\n      setLoadingReplies(true);\n      try {\n        const response = await fetch(`/replies/${postId}`);\n        const data = await response.json();\n        setReplies(data || []);\n      } catch (error) {\n        console.error(`Error fetching replies for post ${postId}:`, error);\n        setReplies([]);\n      } finally {\n        setLoadingReplies(false);\n      }\n    };\n\n    fetchReplies();\n  }, [postId]);\n\n  const handleNewReply = (newReply) => {\n    setReplies((prevReplies) => [...prevReplies, newReply]);\n  };\n\n  return (\n    <div style={styles.repliesContainer}>\n      <button style={styles.replyButton} onClick={() => fetchReplies()}>\n        Refresh Replies\n      </button>\n      {loadingReplies ? (\n        <p>Loading replies...</p>\n      ) : replies.length === 0 ? (\n        <p>No replies yet.</p>\n      ) : (\n        replies.map((reply) => (\n          <div key={reply._id} style={styles.replyCard}>\n            <p style={styles.replyMessage}>{reply.message}</p>\n            <span style={styles.replyUser}>- {reply.user}</span>\n          </div>\n        ))\n      )}\n      <PostForm\n        raceId={postId} // Reuse PostForm for replies\n        onNewPost={handleNewReply}\n        placeholder=\"Write a reply...\"\n      />\n    </div>\n  );\n}\n\nconst styles = {\n  repliesContainer: {\n    marginTop: \"10px\",\n    marginLeft: \"20px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"10px\",\n  },\n  replyButton: {\n    marginBottom: \"10px\",\n    background: \"#007bff\",\n    color: \"#fff\",\n    border: \"none\",\n    padding: \"5px 10px\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n  },\n  replyCard: {\n    backgroundColor: \"#e9ecef\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"5px\",\n    padding: \"10px\",\n  },\n  replyMessage: {\n    margin: \"0 0 5px\",\n  },\n  replyUser: {\n    fontSize: \"0.9rem\",\n    color: \"#555\",\n  },\n};\n\nexport default Replies;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}