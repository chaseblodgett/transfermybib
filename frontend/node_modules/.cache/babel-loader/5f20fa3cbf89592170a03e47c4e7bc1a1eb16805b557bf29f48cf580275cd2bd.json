{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{useParams,Link}from\"react-router-dom\";import PostForm from\"./PostForm\";import PostReplies from\"./PostReplies\";import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";function ChatPage(){const{raceId}=useParams();const[posts,setPosts]=useState([]);const[replies,setReplies]=useState({});const[loading,setLoading]=useState(true);const[raceName,setRaceName]=useState(\"\");const[showPostForm,setShowPostForm]=useState(false);useEffect(()=>{const fetchRaceName=async()=>{try{const response=await fetch(`/races/${raceId}`);const data=await response.json();setRaceName(data.name||\"Unknown Race\");}catch(error){console.error(\"Error fetching race name:\",error);setRaceName(\"Unknown Race\");}};const fetchPosts=async()=>{try{const response=await fetch(`/chat/${raceId}`);const data=await response.json();setPosts(data||[]);}catch(error){console.error(\"Error fetching posts:\",error);setPosts([]);}finally{setLoading(false);}};fetchRaceName();fetchPosts();},[raceId]);// Fetch replies for each post\nuseEffect(()=>{const fetchReplies=async()=>{try{const repliesData=await Promise.all(posts.map(async post=>{const response=await fetch(`/replies/${post._id}`);const data=await response.json();return{postId:post._id,replies:data.slice(0,2)};// Only get the first 2 replies\n}));const repliesMap=repliesData.reduce((acc,_ref)=>{let{postId,replies}=_ref;acc[postId]=replies;return acc;},{});setReplies(repliesMap);}catch(error){console.error(\"Error fetching replies:\",error);}};if(posts.length>0){fetchReplies();}},[posts]);const handleNewPost=newPost=>{setPosts(prevPosts=>[...prevPosts,newPost]);setShowPostForm(false);// Hide the PostForm after a post is created\n};const refreshParentState=()=>{setShowPostForm(false);// Hide the post form\n};return/*#__PURE__*/_jsxs(\"div\",{style:styles.container,children:[/*#__PURE__*/_jsxs(\"h2\",{style:styles.title,children:[raceName,\" Chat\"]}),/*#__PURE__*/_jsx(Link,{to:\"/home\",style:styles.backLink,children:\"\\u2190 Back to Home\"}),/*#__PURE__*/_jsx(\"div\",{style:styles.postsContainer,children:loading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading posts...\"}):posts.length===0?/*#__PURE__*/_jsx(\"div\",{style:styles.noPostsMessage,children:\"No activity here yet!\"}):posts.map(post=>/*#__PURE__*/_jsx(Link,{to:`/chat/${raceId}/thread/${post._id}`,style:styles.postLink,children:/*#__PURE__*/_jsxs(\"div\",{style:styles.postCard,children:[/*#__PURE__*/_jsx(\"strong\",{style:styles.postType,children:post.type}),/*#__PURE__*/_jsx(\"p\",{style:styles.postMessage,children:post.message}),/*#__PURE__*/_jsxs(\"span\",{style:styles.postUser,children:[\"- \",post.user]}),/*#__PURE__*/_jsx(\"span\",{style:styles.postTimestamp,children:new Date(post.createdAt).toLocaleString()}),/*#__PURE__*/_jsx(PostReplies,{replies:replies[post._id]||[]})]})},post._id))}),!showPostForm&&/*#__PURE__*/// Only show the New Post button if the form isn't visible\n_jsx(\"button\",{style:styles.newPostButton,onClick:()=>setShowPostForm(true)// Show the form when clicked\n,children:\"New Post\"}),showPostForm&&/*#__PURE__*/// Display the PostForm when showPostForm is true\n_jsx(PostForm,{raceId:Number(raceId),onNewPost:handleNewPost,onCancel:refreshParentState})]});}const styles={container:{padding:\"40px 20px\",maxWidth:\"800px\",margin:\"0 auto\",color:\"#333\",lineHeight:1.6,// backgroundColor: \"#D5D5D5\"\nfontFamily:\"Georgia, serif\"},title:{fontSize:\"2rem\",fontWeight:\"bold\",marginBottom:\"20px\",textAlign:\"center\",color:\"#A5CBC3\"},backLink:{display:\"block\",textDecoration:\"none\",color:\"#A5CBC3\",fontSize:\"1rem\",marginBottom:\"30px\",transition:\"color 0.3s ease\",textAlign:\"center\"},newPostButton:{backgroundColor:\"#A5CBC3\",color:\"#353839\",border:\"none\",padding:\"10px 20px\",borderRadius:\"5px\",cursor:\"pointer\",fontSize:\"1rem\",marginBottom:\"20px\",width:\"100%\",// Span the full width of the container\ntransition:\"background-color 0.3s ease\"},postsContainer:{marginTop:\"20px\",marginBottom:\"40px\",display:\"flex\",flexDirection:\"column\",gap:\"15px\",backgroundColor:\"#D5D5D5\",borderRadius:\"5px\"},postCard:{backgroundColor:\"#D5D5D5\",border:\"1px solid #ddd\",borderRadius:\"8px\",padding:\"15px\",transition:\"box-shadow 0.3s ease\"},postType:{fontSize:\"1.1rem\",fontWeight:\"bold\",color:\"#333\"},postMessage:{fontSize:\"1rem\",margin:\"10px 0\"},postUser:{fontSize:\"0.9rem\",color:\"#666\"},noPostsMessage:{fontSize:\"1.2rem\",fontWeight:\"bold\",color:\"#536662\",textAlign:\"center\",padding:\"20px\",backgroundColor:\"#D5D5D5\",border:\"1px solid #ddd\",borderRadius:\"12px\"},postLink:{textDecoration:\"none\",color:\"inherit\"},postTimestamp:{fontSize:\"0.8rem\",color:\"#888\",marginLeft:\"10px\"}};export default ChatPage;","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","PostForm","PostReplies","jsxs","_jsxs","jsx","_jsx","ChatPage","raceId","posts","setPosts","replies","setReplies","loading","setLoading","raceName","setRaceName","showPostForm","setShowPostForm","fetchRaceName","response","fetch","data","json","name","error","console","fetchPosts","fetchReplies","repliesData","Promise","all","map","post","_id","postId","slice","repliesMap","reduce","acc","_ref","length","handleNewPost","newPost","prevPosts","refreshParentState","style","styles","container","children","title","to","backLink","postsContainer","noPostsMessage","postLink","postCard","postType","type","postMessage","message","postUser","user","postTimestamp","Date","createdAt","toLocaleString","newPostButton","onClick","Number","onNewPost","onCancel","padding","maxWidth","margin","color","lineHeight","fontFamily","fontSize","fontWeight","marginBottom","textAlign","display","textDecoration","transition","backgroundColor","border","borderRadius","cursor","width","marginTop","flexDirection","gap","marginLeft"],"sources":["/Users/chaseblodgett/Documents/Projects/transfermybib/frontend/src/components/ChatPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport PostForm from \"./PostForm\";\nimport PostReplies from \"./PostReplies\";\n\nfunction ChatPage() {\n  const { raceId } = useParams();\n  const [posts, setPosts] = useState([]);\n  const [replies, setReplies] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [raceName, setRaceName] = useState(\"\");\n  const [showPostForm, setShowPostForm] = useState(false); \n\n  useEffect(() => {\n    const fetchRaceName = async () => {\n      try {\n        const response = await fetch(`/races/${raceId}`);\n        const data = await response.json();\n        setRaceName(data.name || \"Unknown Race\");\n      } catch (error) {\n        console.error(\"Error fetching race name:\", error);\n        setRaceName(\"Unknown Race\");\n      }\n    };\n\n    const fetchPosts = async () => {\n      try {\n        const response = await fetch(`/chat/${raceId}`);\n        const data = await response.json();\n        setPosts(data || []);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n        setPosts([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchRaceName();\n    fetchPosts();\n  }, [raceId]);\n\n  // Fetch replies for each post\n  useEffect(() => {\n    const fetchReplies = async () => {\n      try {\n        const repliesData = await Promise.all(\n          posts.map(async (post) => {\n            const response = await fetch(`/replies/${post._id}`);\n            const data = await response.json();\n            return { postId: post._id, replies: data.slice(0, 2) }; // Only get the first 2 replies\n          })\n        );\n        const repliesMap = repliesData.reduce((acc, { postId, replies }) => {\n          acc[postId] = replies;\n          return acc;\n        }, {});\n        setReplies(repliesMap);\n      } catch (error) {\n        console.error(\"Error fetching replies:\", error);\n      }\n    };\n\n    if (posts.length > 0) {\n      fetchReplies();\n    }\n  }, [posts]);\n\n  const handleNewPost = (newPost) => {\n    setPosts((prevPosts) => [...prevPosts, newPost]);\n    setShowPostForm(false); // Hide the PostForm after a post is created\n  };\n\n  const refreshParentState = () => {\n    setShowPostForm(false); // Hide the post form\n  };\n\n  return (\n    <div style={styles.container}>\n      <h2 style={styles.title}>{raceName} Chat</h2>\n      <Link to=\"/home\" style={styles.backLink}>\n        &larr; Back to Home\n      </Link>\n      \n      <div style={styles.postsContainer}>\n        {loading ? (\n          <p>Loading posts...</p>\n        ) : posts.length === 0 ? (\n          <div style={styles.noPostsMessage}>No activity here yet!</div>\n        ) : (\n          posts.map((post) => (\n            <Link \n              key={post._id} \n              to={`/chat/${raceId}/thread/${post._id}`}\n              style={styles.postLink}\n            >\n              <div style={styles.postCard}>\n                <strong style={styles.postType}>{post.type}</strong>\n                <p style={styles.postMessage}>{post.message}</p>\n                <span style={styles.postUser}>- {post.user}</span>\n                <span style={styles.postTimestamp}>{new Date(post.createdAt).toLocaleString()}</span>\n                {/* Display first two replies for each post */}\n                <PostReplies replies={replies[post._id] || []} />\n              </div>\n            </Link>\n          ))\n        )}\n      </div>\n\n      {!showPostForm && ( // Only show the New Post button if the form isn't visible\n        <button \n          style={styles.newPostButton} \n          onClick={() => setShowPostForm(true)} // Show the form when clicked\n        >\n          New Post\n        </button>\n      )}\n\n      {showPostForm && ( // Display the PostForm when showPostForm is true\n        <PostForm raceId={Number(raceId)} onNewPost={handleNewPost} onCancel={refreshParentState} />\n      )}\n    </div>\n  );\n}\n\nconst styles = {\n  container: {\n    padding: \"40px 20px\",\n    maxWidth: \"800px\",\n    margin: \"0 auto\",\n    color: \"#333\",\n    lineHeight: 1.6,\n    // backgroundColor: \"#D5D5D5\"\n    fontFamily: \"Georgia, serif\"\n  },\n  title: {\n    fontSize: \"2rem\",\n    fontWeight: \"bold\",\n    marginBottom: \"20px\",\n    textAlign: \"center\",\n    color: \"#A5CBC3\"\n  },\n  backLink: {\n    display: \"block\",\n    textDecoration: \"none\",\n    color: \"#A5CBC3\",\n    fontSize: \"1rem\",\n    marginBottom: \"30px\",\n    transition: \"color 0.3s ease\",\n    textAlign: \"center\",\n  },\n  newPostButton: {\n    backgroundColor: \"#A5CBC3\",\n    color: \"#353839\",\n    border: \"none\",\n    padding: \"10px 20px\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    fontSize: \"1rem\",\n    marginBottom: \"20px\",\n    width: \"100%\", // Span the full width of the container\n    transition: \"background-color 0.3s ease\",\n  },\n  postsContainer: {\n    marginTop: \"20px\",\n    marginBottom: \"40px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"15px\",\n    backgroundColor: \"#D5D5D5\",\n    borderRadius: \"5px\",\n  },\n  postCard: {\n    backgroundColor: \"#D5D5D5\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"8px\",\n    padding: \"15px\",\n    transition: \"box-shadow 0.3s ease\",\n  },\n  postType: {\n    fontSize: \"1.1rem\",\n    fontWeight: \"bold\",\n    color: \"#333\",\n  },\n  postMessage: {\n    fontSize: \"1rem\",\n    margin: \"10px 0\",\n  },\n  postUser: {\n    fontSize: \"0.9rem\",\n    color: \"#666\",\n  },\n  noPostsMessage: {\n    fontSize: \"1.2rem\",\n    fontWeight: \"bold\",\n    color: \"#536662\",\n    textAlign: \"center\",\n    padding: \"20px\",\n    backgroundColor: \"#D5D5D5\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"12px\",\n  },\n  postLink: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n  },\n  postTimestamp: {\n    fontSize: \"0.8rem\",\n    color: \"#888\",\n    marginLeft: \"10px\",\n  },\n};\n\nexport default ChatPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}