{"ast":null,"code":"var _jsxFileName = \"/Users/chaseblodgett/Documents/Projects/bib-transfer-app/bib-transfer-app/frontend/src/components/ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport PostForm from \"./PostForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatPage() {\n  _s();\n  const {\n    raceId\n  } = useParams(); // Get the raceId from the URL\n  const [posts, setPosts] = useState([]); // Initially, set posts to an empty array\n  const [loading, setLoading] = useState(true); // Track loading state\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/chat/${raceId}`);\n        const data = await response.json();\n        console.log('Fetched data:', data); // Log the fetched data\n\n        if (Array.isArray(data)) {\n          setPosts(data);\n        } else {\n          console.error(\"Data is not an array:\", data);\n          setPosts([]);\n        }\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n        setPosts([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPosts();\n  }, [raceId]);\n  const handleNewPost = newPost => {\n    setPosts([...posts, newPost]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.title,\n      children: [raceId, \" Marathon Chat\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      style: styles.backLink,\n      children: \"\\u2190 Back to Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.postsContainer,\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading posts...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this) // Show loading message while fetching data\n      : posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.postCard,\n        children: [\"  \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          style: styles.postType,\n          children: post.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.postMessage,\n          children: post.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: styles.postUser,\n          children: [\"- \", post.user]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostForm, {\n      raceId: Number(raceId),\n      onNewPost: handleNewPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatPage, \"9Nz8yzsqwkT7g4mCdDCvVhG9byg=\", false, function () {\n  return [useParams];\n});\n_c = ChatPage;\nconst styles = {\n  container: {\n    padding: \"40px 20px\",\n    maxWidth: \"800px\",\n    margin: \"0 auto\",\n    fontFamily: \"'Arial', sans-serif\",\n    color: \"#333\",\n    lineHeight: 1.6\n  },\n  title: {\n    fontSize: \"2rem\",\n    fontWeight: \"bold\",\n    marginBottom: \"20px\",\n    textAlign: \"center\"\n  },\n  backLink: {\n    display: \"block\",\n    textDecoration: \"none\",\n    color: \"#007bff\",\n    fontSize: \"1rem\",\n    marginBottom: \"30px\",\n    transition: \"color 0.3s ease\",\n    textAlign: \"center\"\n  },\n  postsContainer: {\n    marginTop: \"20px\",\n    marginBottom: \"40px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"15px\"\n  },\n  postCard: {\n    backgroundColor: \"#f8f9fa\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"8px\",\n    padding: \"15px\",\n    transition: \"box-shadow 0.3s ease\"\n  },\n  postType: {\n    fontSize: \"1.1rem\",\n    fontWeight: \"bold\",\n    color: \"#333\"\n  },\n  postMessage: {\n    fontSize: \"1rem\",\n    margin: \"10px 0\"\n  },\n  postUser: {\n    fontSize: \"0.9rem\",\n    color: \"#666\"\n  }\n};\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","PostForm","jsxDEV","_jsxDEV","ChatPage","_s","raceId","posts","setPosts","loading","setLoading","fetchPosts","response","fetch","data","json","console","log","Array","isArray","error","handleNewPost","newPost","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","to","backLink","postsContainer","map","post","postCard","postType","type","postMessage","message","postUser","user","_id","Number","onNewPost","_c","padding","maxWidth","margin","fontFamily","color","lineHeight","fontSize","fontWeight","marginBottom","textAlign","display","textDecoration","transition","marginTop","flexDirection","gap","backgroundColor","border","borderRadius","$RefreshReg$"],"sources":["/Users/chaseblodgett/Documents/Projects/bib-transfer-app/bib-transfer-app/frontend/src/components/ChatPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport PostForm from \"./PostForm\";\n\nfunction ChatPage() {\n  const { raceId } = useParams(); // Get the raceId from the URL\n  const [posts, setPosts] = useState([]);  // Initially, set posts to an empty array\n  const [loading, setLoading] = useState(true);  // Track loading state\n\n  \n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/chat/${raceId}`);\n        const data = await response.json();\n        console.log('Fetched data:', data);  // Log the fetched data\n    \n        \n        if (Array.isArray(data)) {\n          setPosts(data); \n        } else {\n          console.error(\"Data is not an array:\", data);\n          setPosts([]);  \n        }\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n        setPosts([]);  \n      } finally {\n        setLoading(false);\n      }\n    };\n    \n\n    fetchPosts();  \n  }, [raceId]);  \n\n  const handleNewPost = (newPost) => {\n    setPosts([...posts, newPost]); \n  };\n\n  return (\n    <div style={styles.container}>\n      <h2 style={styles.title}>{raceId} Marathon Chat</h2>\n      <Link to=\"/\" style={styles.backLink}>\n        &larr; Back to Home\n      </Link>\n      <div style={styles.postsContainer}>\n        {loading ? (\n          <p>Loading posts...</p>  // Show loading message while fetching data\n        ) : (\n          posts.map((post) => (\n            <div key={post._id} style={styles.postCard}>  {/* Use _id from MongoDB */}\n              <strong style={styles.postType}>{post.type}</strong>\n              <p style={styles.postMessage}>{post.message}</p>\n              <span style={styles.postUser}>- {post.user}</span>\n            </div>\n          ))\n        )}\n      </div>\n      <PostForm raceId={Number(raceId)} onNewPost={handleNewPost} />\n    </div>\n  );\n}\n\nconst styles = {\n  container: {\n    padding: \"40px 20px\",\n    maxWidth: \"800px\",\n    margin: \"0 auto\",\n    fontFamily: \"'Arial', sans-serif\",\n    color: \"#333\",\n    lineHeight: 1.6,\n  },\n  title: {\n    fontSize: \"2rem\",\n    fontWeight: \"bold\",\n    marginBottom: \"20px\",\n    textAlign: \"center\",\n  },\n  backLink: {\n    display: \"block\",\n    textDecoration: \"none\",\n    color: \"#007bff\",\n    fontSize: \"1rem\",\n    marginBottom: \"30px\",\n    transition: \"color 0.3s ease\",\n    textAlign: \"center\",\n  },\n  postsContainer: {\n    marginTop: \"20px\",\n    marginBottom: \"40px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"15px\",\n  },\n  postCard: {\n    backgroundColor: \"#f8f9fa\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"8px\",\n    padding: \"15px\",\n    transition: \"box-shadow 0.3s ease\",\n  },\n  postType: {\n    fontSize: \"1.1rem\",\n    fontWeight: \"bold\",\n    color: \"#333\",\n  },\n  postMessage: {\n    fontSize: \"1rem\",\n    margin: \"10px 0\",\n  },\n  postUser: {\n    fontSize: \"0.9rem\",\n    color: \"#666\",\n  },\n};\n\nexport default ChatPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}